{"ast":null,"code":"var _jsxFileName = \"/home/boniface/Development/code/se-prep/phase-5/Ajali-frontend/src/pages/CreateEditIncident.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createIncident, updateIncident, fetchIncidentById } from '../store/slices/incidentSlice';\nimport IncidentForm from '../components/IncidentForm/IncidentForm';\nimport Modal from '../components/Modal/Modal';\nimport './CreateEditIncident.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateEditIncident = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const {\n    currentIncident,\n    loading,\n    error\n  } = useSelector(state => state.incidents);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchIncidentById(id));\n    }\n  }, [id, dispatch]);\n  const handleSubmit = async formData => {\n    try {\n      if (id) {\n        await dispatch(updateIncident({\n          id,\n          ...formData\n        })).unwrap();\n      } else {\n        await dispatch(createIncident(formData)).unwrap();\n      }\n      navigate('/');\n    } catch (err) {\n      console.error('Failed to save incident:', err);\n    }\n  };\n  const handleCancel = () => {\n    if (Object.values(currentIncident).some(val => val !== '')) {\n      setShowModal(true);\n    } else {\n      navigate('/');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-edit-incident\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: id ? 'Edit Incident' : 'Create New Incident'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(IncidentForm, {\n      incident: id ? currentIncident : null,\n      onSubmit: handleSubmit,\n      onCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      onClose: () => setShowModal(false),\n      onConfirm: () => navigate('/'),\n      title: \"Discard Changes?\",\n      message: \"Are you sure you want to leave? All unsaved changes will be lost.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateEditIncident, \"FD6bAKGTJmKWgdp9JRz/IKzQcs8=\", false, function () {\n  return [useNavigate, useDispatch, useParams, useSelector];\n});\n_c = CreateEditIncident;\nexport default CreateEditIncident;\nvar _c;\n$RefreshReg$(_c, \"CreateEditIncident\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","useSelector","useDispatch","createIncident","updateIncident","fetchIncidentById","IncidentForm","Modal","jsxDEV","_jsxDEV","CreateEditIncident","_s","navigate","dispatch","id","currentIncident","loading","error","state","incidents","showModal","setShowModal","handleSubmit","formData","unwrap","err","console","handleCancel","Object","values","some","val","className","children","fileName","_jsxFileName","lineNumber","columnNumber","incident","onSubmit","onCancel","isOpen","onClose","onConfirm","title","message","_c","$RefreshReg$"],"sources":["/home/boniface/Development/code/se-prep/phase-5/Ajali-frontend/src/pages/CreateEditIncident.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createIncident,updateIncident,fetchIncidentById,} from '../store/slices/incidentSlice';\nimport IncidentForm from '../components/IncidentForm/IncidentForm';\nimport Modal from '../components/Modal/Modal';\nimport './CreateEditIncident.css';\n\nconst CreateEditIncident = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const { currentIncident, loading, error } = useSelector((state) => state.incidents);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchIncidentById(id));\n    }\n  }, [id, dispatch]);\n\n  const handleSubmit = async (formData) => {\n    try {\n      if (id) {\n        await dispatch(updateIncident({ id, ...formData })).unwrap();\n      } else {\n        await dispatch(createIncident(formData)).unwrap();\n      }\n      navigate('/');\n    } catch (err) {\n      console.error('Failed to save incident:', err);\n    }\n  };\n\n  const handleCancel = () => {\n    if (Object.values(currentIncident).some(val => val !== '')) {\n      setShowModal(true);\n    } else {\n      navigate('/');\n    }\n  };\n\n  return (\n    <div className=\"create-edit-incident\">\n      <h1>{id ? 'Edit Incident' : 'Create New Incident'}</h1>\n      {error && <p className=\"error\">{error}</p>}\n      <IncidentForm\n        incident={id ? currentIncident : null}\n        onSubmit={handleSubmit}\n        onCancel={handleCancel}\n      />\n      <Modal\n        isOpen={showModal}\n        onClose={() => setShowModal(false)}\n        onConfirm={() => navigate('/')}\n        title=\"Discard Changes?\"\n        message=\"Are you sure you want to leave? All unsaved changes will be lost.\"\n      />\n    </div>\n  );\n};\n\nexport default CreateEditIncident;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}