{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../utils/api';\nexport const fetchIncidents = createAsyncThunk('incidents/fetchAll', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get('/incidents');\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const fetchIncidentById = createAsyncThunk('incidents/fetchById', async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get(`/incidents/${id}`);\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const createIncident = createAsyncThunk('incidents/create', async (incidentData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.post('/incidents', incidentData);\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const updateIncident = createAsyncThunk('incidents/update', async ({\n  id,\n  ...incidentData\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.put(`/incidents/${id}`, incidentData);\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const deleteIncident = createAsyncThunk('incidents/delete', async (id, {\n  rejectWithValue\n}) => {\n  try {\n    await api.delete(`/incidents/${id}`);\n    return id;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nconst initialState = {\n  incidents: [],\n  currentIncident: {},\n  loading: false,\n  error: null\n};\nconst incidentSlice = createSlice({\n  name: 'incidents',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchIncidents.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchIncidents.fulfilled, (state, action) => {\n      state.loading = false;\n      state.incidents = action.payload;\n    }).addCase(fetchIncidents.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message) || 'Failed to fetch incidents';\n    }).addCase(fetchIncidentById.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchIncidentById.fulfilled, (state, action) => {\n      state.loading = false;\n      state.currentIncident = action.payload;\n    }).addCase(fetchIncidentById.rejected, (state, action) => {\n      var _action$payload2;\n      state.loading = false;\n      state.error = ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.message) || 'Failed to fetch incident';\n    }).addCase(createIncident.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createIncident.fulfilled, (state, action) => {\n      state.loading = false;\n      state.incidents.push(action.payload);\n    }).addCase(createIncident.rejected, (state, action) => {\n      var _action$payload3;\n      state.loading = false;\n      state.error = ((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.message) || 'Failed to create incident';\n    }).addCase(updateIncident.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateIncident.fulfilled, (state, action) => {\n      state.loading = false;\n      const index = state.incidents.findIndex(i => i.id === action.payload.id);\n      if (index !== -1) {\n        state.incidents[index] = action.payload;\n      }\n    }).addCase(updateIncident.rejected, (state, action) => {\n      var _action$payload4;\n      state.loading = false;\n      state.error = ((_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.message) || 'Failed to update incident';\n    }).addCase(deleteIncident.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(deleteIncident.fulfilled, (state, action) => {\n      state.loading = false;\n      state.incidents = state.incidents.filter(i => i.id !== action.payload);\n    }).addCase(deleteIncident.rejected, (state, action) => {\n      var _action$payload5;\n      state.loading = false;\n      state.error = ((_action$payload5 = action.payload) === null || _action$payload5 === void 0 ? void 0 : _action$payload5.message) || 'Failed to delete incident';\n    });\n  }\n});\nexport default incidentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchIncidents","_","rejectWithValue","response","get","data","err","fetchIncidentById","id","createIncident","incidentData","post","updateIncident","put","deleteIncident","delete","initialState","incidents","currentIncident","loading","error","incidentSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","_action$payload","message","_action$payload2","push","_action$payload3","index","findIndex","i","_action$payload4","filter","_action$payload5","reducer"],"sources":["/home/boniface/Development/code/se-prep/phase-5/Ajali-frontend/src/store/slices/incidentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../utils/api';\n\nexport const fetchIncidents = createAsyncThunk(\n  'incidents/fetchAll',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await api.get('/incidents');\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const fetchIncidentById = createAsyncThunk(\n  'incidents/fetchById',\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await api.get(`/incidents/${id}`);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const createIncident = createAsyncThunk(\n  'incidents/create',\n  async (incidentData, { rejectWithValue }) => {\n    try {\n      const response = await api.post('/incidents', incidentData);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const updateIncident = createAsyncThunk(\n  'incidents/update',\n  async ({ id, ...incidentData }, { rejectWithValue }) => {\n    try {\n      const response = await api.put(`/incidents/${id}`, incidentData);\n      return response.data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const deleteIncident = createAsyncThunk(\n  'incidents/delete',\n  async (id, { rejectWithValue }) => {\n    try {\n      await api.delete(`/incidents/${id}`);\n      return id;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  incidents: [],\n  currentIncident: {},\n  loading: false,\n  error: null,\n};\n\nconst incidentSlice = createSlice({\n  name: 'incidents',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchIncidents.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchIncidents.fulfilled, (state, action) => {\n        state.loading = false;\n        state.incidents = action.payload;\n      })\n      .addCase(fetchIncidents.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to fetch incidents';\n      })\n      .addCase(fetchIncidentById.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchIncidentById.fulfilled, (state, action) => {\n        state.loading = false;\n        state.currentIncident = action.payload;\n      })\n      .addCase(fetchIncidentById.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to fetch incident';\n      })\n      .addCase(createIncident.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(createIncident.fulfilled, (state, action) => {\n        state.loading = false;\n        state.incidents.push(action.payload);\n      })\n      .addCase(createIncident.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to create incident';\n      })\n      .addCase(updateIncident.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(updateIncident.fulfilled, (state, action) => {\n        state.loading = false;\n        const index = state.incidents.findIndex(i => i.id === action.payload.id);\n        if (index !== -1) {\n          state.incidents[index] = action.payload;\n        }\n      })\n      .addCase(updateIncident.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to update incident';\n      })\n      .addCase(deleteIncident.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(deleteIncident.fulfilled, (state, action) => {\n        state.loading = false;\n        state.incidents = state.incidents.filter(i => i.id !== action.payload);\n      })\n      .addCase(deleteIncident.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to delete incident';\n      });\n  },\n});\n\nexport default incidentSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}